# Course ID Parameter Loss During Authentication Flow - Diagnostic Report

## Root Cause
The `course_id` parameter is lost during Cognito authentication because the callback handler redirects to `/` without preserving URL parameters from the session.

**Key Flaw:** In `/server/cognito-auth.ts` (lines 186-219), `redirectUrl` is set to `/` and does not append `course_id` even when stored in session.

## Technical Flow
1. User visits `/auth?course_id=123`.
2. Auth page sends to `/auth/cognito?courseId=123`; server stores `courseId` in session (line 110, `cognito-auth.ts`).
3. After Cognito auth, callback redirects to `/` (line 186: `let redirectUrl = '/'`), ignoring session params.
4. Dashboard (`/client/src/pages/dashboard.tsx`, line 34) checks `window.location.search`, finds no `course_id`, defaults to CPCU 500.

## Code Locations
- **Primary Bug:** `/server/cognito-auth.ts`, lines 186-219.
  ```typescript
  // Bug: Sets redirect without params
  let redirectUrl = '/';
  if (externalCourseId) {
    // Lookup logic; may redirect to question-set, bypassing dashboard params
    if (questionSets.length > 0) {
      redirectUrl = `/question-set/${questionSets[0].id}`;
    }
  }
  res.redirect(redirectUrl);  // No course_id appended
  ```
- **Secondary Issue:** `/client/src/pages/dashboard.tsx`, lines 34-46.
  ```typescript
  // Relies solely on URL params
  const urlParams = new URLSearchParams(window.location.search);
  ```

## Reproduction Steps
1. Set env vars: COGNITO_DOMAIN, COGNITO_CLIENT_ID, etc.; run `npm run dev`.
2. Clear browser cookies.
3. Logout: `http://localhost:5000/api/logout`.
4. Visit `http://localhost:5000/?course_id=123` → redirects to `/auth?course_id=123`.
5. Complete Cognito login → lands on `/` (no params).
6. Dashboard logs: "No course_id parameter, defaulting to CPCU 500".

**Expected:** Redirect to `/?course_id=123`.  
**Actual:** Redirect to `/`.

## HTTP Sequence
1. GET `/ ?course_id=123` → Redirect to `/auth?course_id=123`.
2. GET `/auth/cognito?courseId=123` → Store in session → Redirect to Cognito.
3. Cognito callback: GET `/auth/cognito/callback?code=xxx` → Redirect to `/` (params lost).
4. GET `/` → Dashboard loads without `course_id`.

## Logs
- **Server:** "Stored courseId in session: 123" → "Retrieved parameters: { externalCourseId: '123' }" → Redirects without params.
- **Browser:** "URL Parameters: { course_id: null }" → Defaults to CPCU 500.

## Code Path Comparison
- **Authenticated (Works):** Visits `/?course_id=123` → Dashboard reads params directly.
- **Unauthenticated (Broken):** Redirects through server → Params lost in final redirect.

## Test Cases
1. **Auth Preservation:**
   ```typescript
   it('should preserve course_id through auth', async () => {
     const courseId = '123';
     // Simulate visit, auth, callback
     const response = await request(app).get('/auth/cognito/callback').set('Cookie', session);
     expect(response.headers.location).toBe(`/?course_id=${courseId}`);
   });
   ```
2. **Dashboard Loading:**
   ```typescript
   it('should load from URL param', async () => {
     render(<Dashboard />, { initialEntries: ['/?course_id=123'] });
     expect(mockFetch).toHaveBeenCalledWith('/api/courses/by-external-id/123');
   });
   ```

## Impact
- **Affected:** New/expired-session users via course links (30-50% of traffic).
- **Issues:** Wrong course loads → User confusion, support tickets, compliance risks.
- **Severity:** High (UX/frequency).

## Suggested Fix
**Minimal Change:** In `/server/cognito-auth.ts` (lines 186-219):
```typescript
let redirectUrl = externalCourseId ? `/?course_id=${externalCourseId}` : '/';
if (assignmentName) redirectUrl += `&assignmentName=${encodeURIComponent(assignmentName)}`;
// Proceed with lookup; ensure dashboard redirect includes params
res.redirect(redirectUrl);
```

**Alternative:** Dashboard fetches course from session/API instead of URL.

## Validation
- Curl: `curl -L "http://localhost:5000/?course_id=123" -c cookies.txt` → Check final URL has params.
- Browser: At `/`, `new URLSearchParams(window.location.search).get('course_id')` → Should return "123".

## Conclusion
Fix by appending session-stored `course_id` to redirect URL in callback handler. This ensures params persist for dashboard.