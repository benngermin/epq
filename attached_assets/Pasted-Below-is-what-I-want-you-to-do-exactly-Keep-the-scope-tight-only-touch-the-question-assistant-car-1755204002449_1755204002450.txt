Below is what I want you to do, exactly. Keep the scope tight: only touch the question/assistant card and its immediate parents. Don’t rename components, don’t refactor unrelated code, and don’t introduce new libraries. The goal is: the message list scrolls, the Review Question bar is always visible, and there is no extra space below it.

What to fix (observed)

The sticky action area (composer + Review Question) currently has a bottom margin (~80px) and/or a spacer div underneath it. That’s creating the big gap and sometimes pushes the button off-screen.

The parent containers use flex with h-full but are missing min-h-0, so the scrollable region can’t shrink correctly when content grows. This makes the sticky area misbehave.

The messages area isn’t the thing that scrolls; the whole card is, so the sticky bar alternates between being too high and getting pushed out of reach.

Exact changes to make

Make the assistant card a column flex container that can actually shrink

On the assistant card and every direct flex parent down to the messages list, ensure:

display: flex; flex-direction: column;

flex: 1 1 auto;

min-height: 0; ← this is critical

Keep min-height: 100dvh at the page/app level (not height: 100vh).

Tailwind example to apply where appropriate:
flex flex-col flex-1 min-h-0 (replace h-full with flex-1 min-h-0 on inner containers)

Split the card into two regions

“Messages” area: the only thing that scrolls.

“Action bar”: composer + Review Question; it must stick to the bottom of the card and never have a bottom margin.

Kill the bottom gap

Remove all margins/paddings/spacer elements below the sticky bar. In particular, remove any mb-* (including mb-2) on the sticky action bar wrapper and any spacer <div> placed after it.

Search the repo and delete/adjust anything like:

mb-20, mb-[80px], padding-bottom: 80px;, footer-spacer, composer-spacer, or a div with fixed height below the action bar.

Do not use justify-between on the container that holds messages + action bar. Replace with gap-y-* for spacing above the bar if needed.

Make the messages area scroll and reserve space for the bar

Messages container must have:

flex: 1 1 auto; min-height: 0; overflow-y: auto;

bottom padding equal to the action bar’s height so the last message can’t hide behind it.

Implement a simple dynamic measurement:

Give the action bar an id or ref (e.g., actionBarRef).

On mount and on resize, set a CSS variable on the messages element:
messagesEl.style.setProperty('--action-bar-h', actionBarRef.offsetHeight + 'px')

Add padding-bottom: var(--action-bar-h); to the messages container.

Tailwind/class hints (apply, don’t overthink):
Messages: flex-1 min-h-0 overflow-y-auto pb-[var(--action-bar-h)]
Action bar wrapper: sticky bottom-0 z-10 bg-white border-t p-3 md:p-4 mb-0
Also add pb-[calc(env(safe-area-inset-bottom)+12px)] inside the action bar if needed for iOS.

Ensure the sticky bar actually sticks

The sticky bar must be inside the same scroll context as messages. Do not wrap it in an ancestor that has overflow: hidden/auto/scroll; the scrolling element should be messages, not the card wrapper.

If a parent currently has overflow-hidden for rounded corners/shadows, keep that on the card, but place sticky + messages inside a child that does not have its own overflow (other than the messages list itself).

Move navigation buttons (Previous/Next) out of the messages scroll

Place the question navigation bar outside the assistant card or in its own page-level sticky footer. It must not sit inside the messages scroll container.

Viewport + keyboard sanity

Use min-h-[100dvh] at the page level (not 100vh) to avoid iOS keyboard jumps.

On html, body, keep height: 100% and set overscroll-behavior: contain;.

Files to touch (keep the diff small)

The question/assistant card component (where the sticky bar and messages live). In your code this appears to be client/src/components/question-card.tsx.

The page wrapper that sets the main flex layout (likely client/src/pages/question-set-practice-optimized.tsx). Only adjust container classes to ensure flex flex-col flex-1 min-h-0.

Acceptance criteria (don’t stop until all pass)

No extra blank space under Review Question on any viewport.

Review Question is always visible and tappable, even with very long assistant replies.

The messages area scrolls; the action bar does not scroll away.

With the mobile keyboard open, the action bar remains accessible and not overlapped.

No mb-* on the sticky action bar; no spacer divs below it.

No justify-between on the container that holds messages + action bar.

Works in iOS Safari and Chrome Android.